/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'MMSEQS_CREATEDB' {
        publishDir = [
            path: { "${params.outdir}/mmseqs/mmseqs_createdb/" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MMSEQS_CLUSTER' {
        ext.args = [
            "--min-seq-id ${params.cluster_seq_identity}",
            "-c ${params.cluster_coverage}",
            "--cov-mode ${params.cluster_cov_mode}",
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/mmseqs/mmseqs_cluster/" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MMSEQS_LINCLUST' {
        ext.args = [
            "--min-seq-id ${params.cluster_seq_identity}",
            "-c ${params.cluster_coverage}",
            "--cov-mode ${params.cluster_cov_mode}",
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/mmseqs/mmseqs_linclust/" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MMSEQS_CREATETSV' {
        publishDir = [
            path: { "${params.outdir}/mmseqs/mmseqs_createtsv/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CHUNK_CLUSTERS' {
        publishDir = [
            path: { "${params.outdir}/fasta_chunks/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FAMSA_ALIGN' {
        ext.prefix = { "${meta.id}_${meta.chunk}" }
        tag = { "${meta.id}_${meta.chunk}" }
        publishDir = [
            path: { "${params.outdir}/famsa_align/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MAFFT_ALIGN' {
        ext.prefix = { "${meta.id}_${meta.chunk}" }
        tag = { "${meta.id}_${meta.chunk}" }
        publishDir = [
            path: { "${params.outdir}/mafft_align/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CLIPKIT' {
        ext.prefix = { "${meta.id}_${meta.chunk}" }
        tag = { "${meta.id}_${meta.chunk}" }
        publishDir = [
            path: { "${params.outdir}/clipkit/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'HMMER_HMMSEARCH' {
        ext.args   = { "-E ${params.hmmsearch_evalue_cutoff}" }
        ext.prefix = { "${meta.id}_${meta.chunk}" }
        tag = { "${meta.id}_${meta.chunk}" }
    }

    withName: 'EXTRACT_FAMILY_REPS' {
        publishDir = [
            path: { "${params.outdir}/family_reps/${meta.id}/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
